{
  "lambda-basic-execution": {
    "policy_content": {
      "Statement": [
        {
          "Action": [
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents",
            "dynamodb:GetItem",
            "dynamodb:Query",
            "dynamodb:PutItem",
            "dynamodb:Batch*",
            "dynamodb:DeleteItem",
            "dynamodb:Scan",
            "dynamodb:DescribeTable",
            "dynamodb:UpdateItem",
            "cognito-idp:DescribeUserPool",
            "cognito-idp:GetUser",
            "cognito-idp:ListUsers",
            "cognito-idp:AdminCreateUser",
            "cognito-idp:AdminInitiateAuth",
            "cognito-idp:GetIdentityProviderByIdentifier",
            "cognito-idp:ListUserPools",
            "cognito-idp:ListUserPoolClients",
            "cognito-idp:AdminRespondToAuthChallenge",
            "cognito-idp:AdminConfirmSignUp",
            "cognito-idp:SignUp",
            "cognito-idp:AdminUpdateUserAttributes",
            "cognito-idp:RevokeToken",
            "sqs:SendMessage",
            "sqs:GetQueueUrl"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "resource_type": "iam_policy",
    "tags": {}
  },
  "${restaurant_userpool}": {
    "resource_type": "cognito_idp",
    "password_policy": {
      "minimum_length": 8,
      "require_uppercase": true,
      "require_symbols": true,
      "require_lowercase": true,
      "require_numbers": true
    },
    "auto_verified_attributes": [],
    "sms_configuration": {},
    "username_attributes": [],
    "custom_attributes": [
      {
        "name": "role",
        "type": "String"
      }
    ],
    "client": {
      "client_name": "client-app",
      "generate_secret": false,
      "explicit_auth_flows": [
        "ALLOW_ADMIN_USER_PASSWORD_AUTH",
        "ALLOW_CUSTOM_AUTH",
        "ALLOW_USER_SRP_AUTH",
        "ALLOW_REFRESH_TOKEN_AUTH"
      ]
    },
    "tags": {}
  },
  "restaurant-backend-app": {
    "resource_type": "api_gateway",
    "deploy_stage": "api",
    "dependencies": [],
    "resources": {
      "/signin": {
        "enable_cors": true,
        "POST": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/signup": {
        "enable_cors": true,
        "POST": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/signout": {
        "enable_cors": true,
        "POST": {
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/auth/refresh": {
        "enable_cors": true,
        "POST": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/locations/{id}": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/locations": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/locations/select-options": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/users/profile": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/dishes/popular": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/dishes": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/dishes/{id}": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/reservations/tables": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {
            "method.request.querystring.locationId": true,
            "method.request.querystring.date": true,
            "method.request.querystring.time": false,
            "method.request.querystring.guests": false
          },
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/locations/{id}/speciality-dishes": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/reservations/client": {
        "enable_cors": true,
        "POST": {
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/locations/{id}/feedbacks": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/reservations": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/reservations/{id}": {
        "enable_cors": true,
        "DELETE": {
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/users": {
        "enable_cors": true,
        "GET": {
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/reservations/waiter": {
        "enable_cors": true,
        "POST": {
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/feedbacks": {
        "enable_cors": true,
        "POST": {
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      },
      "/reservations/{id}/complete": {
        "enable_cors": true,
        "POST": {
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "lambda_name": "restaurant-api-handler",
          "enable_proxy": true,
          "api_key_required": false,
          "method_request_parameters": {},
          "integration_request_body_template": {},
          "responses": [],
          "integration_responses": [],
          "default_error_pattern": true
        }
      }
    },
    "tags": {},
    "authorizers": {
      "authorizer": {
        "type": "COGNITO_USER_POOLS",
        "identity_source": "method.request.header.Authorization",
        "ttl": 300,
        "user_pools": [
          "${restaurant_userpool}"
        ]
      }
    }
  },
  "${employee_info_table}": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "id",
    "hash_key_type": "S",
    "read_capacity": 1,
    "write_capacity": 1,
    "global_indexes": [
      {
        "name": "${employee_info_table_email_index_name}",
        "index_key_name": "email",
        "index_key_type": "S"
      }
    ],
    "autoscaling": [],
    "tags": {}
  },
  "${locations_table}": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "id",
    "hash_key_type": "S",
    "read_capacity": 1,
    "write_capacity": 1,
    "global_indexes": [],
    "autoscaling": [],
    "tags": {}
  },
  "${dishes_table}": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "id",
    "hash_key_type": "S",
    "read_capacity": 1,
    "write_capacity": 1,
    "global_indexes": [],
    "autoscaling": [],
    "tags": {}
  },
  "${tables_table}": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "id",
    "hash_key_type": "S",
    "read_capacity": 1,
    "write_capacity": 1,
    "global_indexes": [
      {
        "name": "${tables_table_location_index_name}",
        "index_key_name": "locationId",
        "index_key_type": "S",
        "index_sort_key_name": "capacity",
        "index_sort_key_type": "N"
      }
    ],
    "autoscaling": [],
    "tags": {}
  },
  "${reservations_table}": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "id",
    "hash_key_type": "S",
    "read_capacity": 1,
    "write_capacity": 1,
    "global_indexes": [
      {
        "name": "${reservations_table_location_date_index}",
        "index_key_name": "locationId",
        "index_key_type": "S",
        "index_sort_key_name": "date",
        "index_sort_key_type": "S"
    },
      {
        "name": "${reservations_table_user_email_index_name}",
        "index_key_name": "userEmail",
        "index_key_type": "S"
      },
      {
        "name": "${reservations_table_waiter_index}",
        "index_key_name": "waiterId",
        "index_key_type": "S",
        "index_sort_key_name": "date",
        "index_sort_key_type": "S"
}
    ],
    "autoscaling": [],
    "tags": {}
  },
  "${locationFeedback_table}": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "locationId",
    "hash_key_type": "S",
    "sort_key_name": "type#date",
    "sort_key_type": "S",
    "read_capacity": 1,
    "write_capacity": 1,
    "global_indexes": [
      {
        "name": "${ix_locationFeedback_type_date}",
        "index_key_name": "locationId#type",
        "index_key_type": "S",
        "index_sort_key_name": "date",
        "index_sort_key_type": "S"
      },
      {
        "name": "${ix_locationFeedback_reservation_type}",
        "index_key_name": "reservationId#type",
        "index_key_type": "S",
        "index_sort_key_name": "type",
        "index_sort_key_type": "S"
      },
      {
        "name": "${ix_locationFeedback_type_rating}",
        "index_key_name": "locationId#type",
        "index_key_type": "S",
        "index_sort_key_name": "rate",
        "index_sort_key_type": "N"
      },
      {
        "name": "${ix_locationFeedback_date}",
        "index_key_name": "locationId",
        "index_key_type": "S",
        "index_sort_key_name": "date",
        "index_sort_key_type": "S"
      },
      {
        "name": "${ix_locationFeedback_rating}",
        "index_key_name": "locationId",
        "index_key_type": "S",
        "index_sort_key_name": "rate",
        "index_sort_key_type": "N"
      }
    ],
    "autoscaling": [],
    "tags": {}
  },
  "${users_table}": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "id",
    "hash_key_type": "S",
    "read_capacity": 1,
    "write_capacity": 1,
    "global_indexes": [
      {
        "name": "${user_table_email_index}",
        "index_key_name": "email",
        "index_key_type": "S"
      }
    ],
    "autoscaling": [],
    "tags": {}
  },
  "${sqs_queue}": {
    "resource_type": "sqs_queue",
    "fifo_queue": false,
    "visibility_timeout": 600,
    "delay_seconds": 0,
    "maximum_message_size": 1024,
    "message_retention_period": 60,
    "receive_message_wait_time_seconds": 0,
    "policy": {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Action": [
            "sqs:SendMessage",
            "sqs:GetQueueUrl"
          ],
          "Resource": "*",
          "Effect": "Allow"
        }
      ]
    },
    "redrive_policy": {},
    "content_based_deduplication": false,
    "tags": {}
  },
  "${reports_table}": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "partition",
    "hash_key_type": "S",
    "sort_key_name": "date#id",
    "sort_key_type": "S",
    "read_capacity": 1,
    "write_capacity": 1,
    "global_indexes": [],
    "autoscaling": [],
    "tags": {}
  },
  "${report_eventbridge}": {
    "resource_type": "cloudwatch_rule",
    "rule_type": "schedule",
    "tags": {},
    "expression": "rate(7 days)"
  },
  "reports_handler_policy": {
    "policy_content": {
      "Statement": [
        {
          "Action": [
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents",
            "dynamodb:GetItem",
            "dynamodb:Query",
            "dynamodb:PutItem",
            "dynamodb:Batch*",
            "dynamodb:DeleteItem",
            "dynamodb:Scan",
            "dynamodb:DescribeTable",
            "dynamodb:UpdateItem",
            "sqs:ReceiveMessage",
            "sqs:DeleteMessage",
            "sqs:GetQueueAttributes"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "resource_type": "iam_policy",
    "tags": {}
  },
  "reports_sender_policy": {
    "policy_content": {
      "Statement": [
        {
          "Action": [
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents",
            "dynamodb:GetItem",
            "dynamodb:Query",
            "dynamodb:PutItem",
            "dynamodb:Batch*",
            "dynamodb:DeleteItem",
            "dynamodb:Scan",
            "dynamodb:DescribeTable",
            "dynamodb:UpdateItem",
            "ses:SendEmail",
            "ses:SendRawEmail"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "resource_type": "iam_policy",
    "tags": {}
  }
}